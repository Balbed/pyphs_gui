{
    const int totalNumInputChannels  = getTotalNumInputChannels();
    const int totalNumOutputChannels = getTotalNumOutputChannels();
    
    // Apply input gains    
    const float currentInputGain1 = *inputGain1;
    if (currentInputGain1 == previousInputGain1)
    {
        buffer.applyGain (0, 0, buffer.getNumSamples(), pow(10., currentInputGain1));
    }
    else
    {
        buffer.applyGainRamp (0, 0, buffer.getNumSamples(), pow(10., previousInputGain1), pow(10., currentInputGain1));
        previousInputGain1 = currentInputGain1;
    }    
    float* leftData = buffer.getWritePointer(0);
        
    // Walk over buffer elements    
    for(unsigned int i=0; i<buffer.getNumSamples(); i++)    
    {        
        // Update PHS input 1.    
        clipper.set_u(leftData[i], clipperInputIndices[0]);
            
            
        // Core PHS update.    
        clipper.update();
            
        // Get PHS ouput 1.    
        leftData[i] = clipper.y(clipperOutputIndices[0]);
            
    }
        
    // Apply output gains    
    const float currentOutputGain1 = *outputGain1;
    if (currentOutputGain1 == previousOutputGain1)
    {
        buffer.applyGain (0, 0, buffer.getNumSamples(), pow(10., currentOutputGain1));
    }
    else
    {
        buffer.applyGainRamp (0, 0, buffer.getNumSamples(), pow(10., previousOutputGain1), pow(10., currentOutputGain1));
        previousOutputGain1 = currentOutputGain1;
    }
}
